version: '3'
services:
  nacos:
    image: nacos/nacos-server:v2.3.0
    container_name: nacos
    restart: unless-stopped
    networks:
      - doctorarrival-network
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"
    privileged: true
    volumes:
      - ./config/nacos/conf:/home/nacos/conf
      - ./config/nacos/logs:/home/nacos/logs
    environment:
      MODE: standalone

  mysql:
    image: mysql:8.2.0
    container_name: mysql
    restart: unless-stopped
    networks:
      - doctorarrival-network
    ports:
      - "3306:3306"
    privileged: true
    volumes:
      - ./sql:/docker-entrypoint-initdb.d
      - ./config/mysql/conf.d:/etc/mysql/conf.d
      - ./config/mysql/log:/var/log/mysql
      - ./config/mysql/data:/var/lib/mysql
      - /etc/localtime:/etc/localtime
    environment:
      MYSQL_ROOT_PASSWORD: 123456

  mongodb:
    image: mongo:6.0.12
    container_name: mongodb
    restart: unless-stopped
    networks:
      - doctorarrival-network
    ports:
      - "27017:27017"
    privileged: true
    volumes:
      - ./config/mongo/data:/data/db
      - ./config/mongo/conf:/data/configdb
      - ./config/mongo/backup:/data/backup
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: 123456
    command: [ "--auth" ]

  redis:
    image: redis:7.2.3
    container_name: redis
    restart: unless-stopped
    networks:
      - doctorarrival-network
    ports:
      - "6379:6379"
    privileged: true
    volumes:
      - ./config/redis/data:/data
      - ./config/redis/redis.conf:/etc/redis/redis.conf
    command:
      [
        "redis-server",
        "/etc/redis/redis.conf",
        "--appendonly",
        "yes",
        "--requirepass",
        "123456"
      ]

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    restart: unless-stopped
    networks:
      - doctorarrival-network
    ports:
      - "5672:5672"
      - "15672:15672"
    privileged: true
    volumes:
      - ./config/rabbitmq:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin

  # seata-server:
  #   image: seataio/seata-server:2.0.0
  #   container_name: seata-server
  #   restart: unless-stopped
  #   networks:
  #     - doctorarrival-network
  #   ports:
  #     - "7091:7091"
  #     - "8091:8091"
  #   privileged: true
  #   volumes:
  #     - "/usr/share/zoneinfo/Asia/Shanghai:/etc/localtime" #设置系统时区
  #     - "/usr/share/zoneinfo/Asia/Shanghai:/etc/timezone" #设置时区
  #     - "./config/seata/resources:/seata-server/resources"
  #   environment:
  #     - STORE_MODE=db
  #     # 以SEATA_IP作为host注册seata server
  #     # - SEATA_IP=seata_ip
  #     # - SEATA_PORT=8091

  # Application services
  service-gateway:
    build: doctorarrival/service-gateway
    image: xftxyz/doctorarrival-gateway:0.0.1
    container_name: service-gateway
    restart: unless-stopped
    networks:
      - doctorarrival-network
    ports:
      - "80:80"
    privileged: true
    volumes:
      - ./config/service-gateway:/app/config

  service-common:
    build: doctorarrival/service-parent/service-common
    image: xftxyz/doctorarrival-common:0.0.1
    container_name: service-common
    restart: unless-stopped
    networks:
      - doctorarrival-network
    ports:
      - "8210:8210"
    privileged: true
    volumes:
      - ./config/service-common:/app/config

  service-hospital:
    build: doctorarrival/service-parent/service-hospital
    image: xftxyz/doctorarrival-hospital:0.0.1
    container_name: service-hospital
    restart: unless-stopped
    networks:
      - doctorarrival-network
    ports:
      - "8220:8220"
    privileged: true
    volumes:
      - ./config/service-hospital:/app/config

  service-user:
    build: doctorarrival/service-parent/service-user
    image: xftxyz/doctorarrival-user:0.0.1
    container_name: service-user
    restart: unless-stopped
    networks:
      - doctorarrival-network
    ports:
      - "8230:8230"
    privileged: true
    volumes:
      - ./config/service-user:/app/config

  service-sms:
    build: doctorarrival/service-parent/service-sms
    image: xftxyz/doctorarrival-sms:0.0.1
    container_name: service-sms
    restart: unless-stopped
    networks:
      - doctorarrival-network
    ports:
      - "8250:8250"
    privileged: true
    volumes:
      - ./config/service-sms:/app/config

  service-oss:
    build: doctorarrival/service-parent/service-oss
    image: xftxyz/doctorarrival-oss:0.0.1
    container_name: service-oss
    restart: unless-stopped
    networks:
      - doctorarrival-network
    ports:
      - "8260:8260"
    privileged: true
    volumes:
      - ./config/service-oss:/app/config

  service-order:
    build: doctorarrival/service-parent/service-order
    image: xftxyz/doctorarrival-order:0.0.1
    container_name: service-order
    restart: unless-stopped
    networks:
      - doctorarrival-network
    ports:
      - "8270:8270"
    privileged: true
    volumes:
      - ./config/service-order:/app/config

  service-task:
    build: doctorarrival/service-parent/service-task
    image: xftxyz/doctorarrival-task:0.0.1
    container_name: service-task
    restart: unless-stopped
    networks:
      - doctorarrival-network
    ports:
      - "8280:8280"
    privileged: true
    volumes:
      - ./config/service-task:/app/config

  service-statistics:
    build: doctorarrival/service-parent/service-statistics
    image: xftxyz/doctorarrival-statistics:0.0.1
    container_name: service-statistics
    restart: unless-stopped
    networks:
      - doctorarrival-network
    ports:
      - "8290:8290"
    privileged: true
    volumes:
      - ./config/service-statistics:/app/config

  doctorarrival-site:
    build: doctorarrival-site
    image: xftxyz/doctorarrival-site:0.0.1
    container_name: doctorarrival-site
    restart: unless-stopped
    networks:
      - doctorarrival-network
    ports:
      - "3000:3000"

  doctorarrival-admin:
    build: doctorarrival-admin
    image: xftxyz/doctorarrival-admin:0.0.1
    container_name: doctorarrival-admin
    restart: unless-stopped
    networks:
      - doctorarrival-network
    ports:
      - "3001:3001"

networks:
  doctorarrival-network:
    name: doctorarrival-network
    driver: bridge
